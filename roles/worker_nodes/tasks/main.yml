---
# tasks file for nodes

#- name: 1) Atualizar repositorio
#  shell:             # comando que daria no terminal á no host
#    cmd: "sudo apt-get update"
- name: Remove apt lock file
  file:
    state: absent
    path: "/var/lib/dpkg/lock"
  ignore_errors: yes

- name: 2) Transport-https ca-certificates curl
  become: true
  shell:             # comando que daria no terminal á no host
    cmd: "sudo apt-get install -y apt-transport-https ca-certificates curl"
  ignore_errors: yes
  
- name: Instalar o pacote gnupg
  apt:
    name: gnupg
    state: present

- name: Baixar chave GPG do repositório do Google Cloud Kubernetes
  shell: |
    wget -qO- https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg
  args:
    creates: /etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg

#- name: 3.1) mova-a para o diretório adequado
#  shell:             
#    cmd: "mv kubernetes-archive-keyring.gpg /etc/apt/trusted.gpg.d/"


- name: 4) Desligar SWAP
  shell:             
    cmd: "swapoff -a"

- name: Instalar netplan.io
  ansible.builtin.apt:
      name: netplan.io
      state: present

#- name: 5) Remover linha /swap.img NAO existe a linha swap.img
#  replace:
#      path: /etc/fstab
#      regexp: '/swap.img'
#      replace: '#/swap.img'

- name: 10) Commit netplan
  shell:             
    cmd: "sudo netplan apply"

- name: 11) containerd prerequisites overlay
  shell:             
    cmd: "sudo modprobe overlay"

- name: 12) containerd prerequisites br_netfilter
  shell:             
    cmd: "sudo modprobe br_netfilter"

- name: 13) Criar arquivo containerd.conf
  shell:
    cmd: "cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf"

- name: 14) Add overlay & br_netfilter
  lineinfile:
    path: /etc/modules-load.d/containerd.conf
    line: "{{ item }}"
  with_items:
    - "{{ over }}"
    - "{{ net }}"
    
- name: 15) Criar arquivo 99-kubernetes-cri.conf
  shell:
    cmd: "cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf"

- name: 16) Add IpTables
  lineinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    line: "{{ item }}"
  with_items:
    - "{{ iptables }}"
    - "{{ forward }}"
    - "{{ ip6tables }}"

- name: 17) Apply sysctl params without reboot
  shell:             
    cmd: "sudo sysctl --system"

- name: 18) Atualizar repositorio para Instalaçao do Containerd
  shell:             # comando que daria no terminal á no host
    cmd: "sudo apt-get update"

- name: Sleep for 100 seconds and continue with play
  ansible.builtin.wait_for:
   timeout: 100

- name: Remove apt lock file # erro de lock file
  file:
    state: absent
    path: "/var/lib/dpkg/lock"

- name: 19) Install containerd
  ansible.builtin.apt:
    name: containerd
    state: present
   
- name: 20) Update ContanerD (Step 1)
  shell:             
    cmd: "wget https://github.com/containerd/containerd/releases/download/v1.6.12/containerd-1.6.12-linux-amd64.tar.gz"

- name: 21) Update ContanerD (Step 2)
  shell:             
    cmd: "tar xvf containerd-1.6.12-linux-amd64.tar.gz"

- name: 22) Create a containerd configuration file (step1)
  shell:             
    cmd: "sudo mkdir -p /etc/containerd"

- name: 23) Create a containerd configuration file (step2)
  shell:             
    cmd: "sudo containerd config default | sudo tee /etc/containerd/config.toml"

- name: 24) Set the cgroup driver for containerd to systemd which is required for the kubelet
  shell:             
    cmd: "sudo sed -i 's/            SystemdCgroup = false/            SystemdCgroup = true/' /etc/containerd/config.toml"

- name: 24.1) Restart containerD
  shell:
    cmd: "sudo systemctl restart containerd"

- name: 25) Install Kubernetes packages - kubeadm, kubelet and kubectl #alterar no bash
  shell:             
    cmd: "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - "
    #cmd: "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/kubernetes-archive-keyring.gpg >/dev/null"

- name: 26) Add the Kubernetes apt repository
  shell:
    cmd: "sudo bash -c cat <<EOF >/etc/apt/sources.list.d/kubernetes.list"

- name: 27) Add deb xenial
  lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: "{{ item }}"
  with_items:
    - "{{ xenial }}"

#- name: Chave Pub
#  shell:             # comando que daria no terminal á no host
#    cmd: "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B53DC80D13EDEF05"
#
- name: 28) Atualizar repositorio para Instalaçao do Kubelet
  shell:            
    cmd: "apt-get update"

- name: 29) Instalaçao do Kubelet, Kubeadm, Kubectl
  shell:
    cmd: "sudo apt-get install -y kubelet=1.25.5-00 kubeadm=1.25.5-00  kubectl=1.25.5-00"
 
- name: 30) Marcar como hold
  shell:            
    cmd: "sudo apt-mark hold kubelet kubeadm kubectl containerd"

- name: 31) Marcar como ENABLE kubelet
  shell:            
    cmd: "sudo systemctl enable kubelet.service"

- name: 32) Marcar como ENABLE containerd
  shell:            
    cmd: "sudo systemctl enable containerd.service"
  
- name: Restart Servers
  reboot:
  
