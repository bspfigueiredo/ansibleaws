---
# tasks file for nodes
- name: Set a hostname dos nós
  hostname:
    name: "{{ hostname }}"
  notify: #handlers
    - addInHostsFile

- name: Atualizar repositorio
  shell:             # comando que daria no terminal á no host
    cmd: "apt-get update"

- name: Desligar SWAP
  shell:             
    cmd: "swapoff -a"

#- name: Remover img de swap
#  shell:             
#    cmd: "sudo rm /swap.img "

- name: Remover linha /swap.img
  shell:             
    cmd: "sudo sed -i 's/            /swap.img/            #/swap.img'/ /etc/fstab"

- name: Install net-tools
  shell:             
    cmd: "apt install net-tools"

- name: Criar arquivo interfaces - atribuir static ip
  shell:
    cmd: "cat <<EOF | sudo tee /etc/network/interfaces"

- name: Add Configs
  lineinfile:
    path: /etc/network/interfaces
    line: "{{ item }}"
  with_items:
    - "{{ iface }}"
    - "{{ address }}"
    - "{{ gateway }}"
    - "{{ netmask }}"

- name: Commit netplan
  shell:             
    cmd: "sudo netplan apply"

- name: containerd prerequisites overlay
  shell:             
    cmd: "sudo modprobe overlay"

- name: containerd prerequisites br_netfilter
  shell:             
    cmd: "sudo modprobe br_netfilter"

- name: Criar arquivo containerd.conf
  shell:
    cmd: "cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf"

- name: Add overlay & br_netfilter
  lineinfile:
    path: /etc/modules-load.d/containerd.conf
    line: "{{ item }}"
  with_items:
    - "{{ over }}"
    - "{{ net }}"
    
- name: Criar arquivo 99-kubernetes-cri.conf
  shell:
    cmd: "cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf"

- name: Add IpTables
  lineinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    line: "{{ item }}"
  with_items:
    - "{{ iptables }}"
    - "{{ forward }}"
    - "{{ ip6tables }}"

- name: Apply sysctl params without reboot
  shell:             
    cmd: "sudo sysctl --system"

- name: Atualizar repositorio para Instalaçao do Containerd
  shell:             # comando que daria no terminal á no host
    cmd: "apt-get update"

- name: Instalaçao do Containerd
  shell:             
    cmd: "sudo apt-get install -y containerd"

- name: Create a containerd configuration file (step1)
  shell:             
    cmd: "sudo mkdir -p /etc/containerd"

- name: Create a containerd configuration file (step2)
  shell:             
    cmd: "sudo containerd config default | sudo tee /etc/containerd/config.toml"

- name: Set the cgroup driver for containerd to systemd which is required for the kubelet
  shell:             
    cmd: "sudo sed -i 's/            SystemdCgroup = false/            SystemdCgroup = true/' /etc/containerd/config.toml"

- name: Install Kubernetes packages - kubeadm, kubelet and kubectl
  shell:             
    cmd: "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -"

- name: Add the Kubernetes apt repository
  shell:
    cmd: "sudo bash -c cat <<EOF >/etc/apt/sources.list.d/kubernetes.list"

- name: Add deb xenial
  lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: "{{ item }}"
  with_items:
    - "{{ xenial }}"

- name: Atualizar repositorio para Instalaçao do Kubelet
  shell:            
    cmd: "apt-get update"

- name: Instalaçao do Kubelet, Kubeadm, Kubectl
  shell:
    cmd: "sudo apt-get install -y kubelet=1.25.3-00 kubeadm=1.25.3-00  kubectl=1.25.3-00"
 
- name: Marcar como ENABLE kubelet
  shell:            
    cmd: "sudo systemctl enable kubelet.service"

- name: Marcar como ENABLE containerd
  shell:            
    cmd: "sudo systemctl enable containerd.service"
  